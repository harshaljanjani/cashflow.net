package db

// writing unit tests
import (
	"context"
	"testing"

	"github.com/harshaljanjani/cashflow.net/db/util"
	"github.com/stretchr/testify/require"
)
func TestCreateAccount(t *testing.T){
	// generate random values, avoid conflicts between unit tests (helps in the case of unique constraints)
	arg := CreateAccountParams{
		Owner: util.RandomOwner(),
		Balance: util.RandomMoney(),
		Currency: util.RandomCurrency(),
	}
	account, err := testQueries.CreateAccount(context.Background(), arg)
	require.NoError(t,err)
	require.NotEmpty(t,account)
	// check if the owner params are equal to the arg params
	require.Equal(t,arg.Owner,account.Owner)
	require.Equal(t,arg.Balance,account.Balance)
	require.Equal(t,arg.Currency,account.Currency)
	// account ID automatically generated by postgres
	require.NotZero(t,account.ID)
	// createdAt is filled with current timestamp
	require.NotZero(t,account.CreatedAt)
}